commit fc22360abd30b91c6e1ff84d815ccf84569403cd
Author: Alexander Klink <git@alech.de>
Date:   Mon Dec 7 23:54:11 2015 +0100

    decode JSON using JSON library, so it can be used by extensions

diff --git a/oysttyer.pl b/oysttyer.pl
index 6f552de..a628116 100755
--- a/oysttyer.pl
+++ b/oysttyer.pl
@@ -16,6 +16,7 @@
 #########################################################################
 
 require 5.005;
+use JSON;
 
 BEGIN {
 	# ONLY STUFF THAT MUST RUN BEFORE INITIALIZATION GOES HERE!
@@ -7336,6 +7337,8 @@ sub parsejson {
 	my $ddqqmask;
 	my $ssqqmask;
 
+	my $orig_data = $data;
+
 	# test for single logicals
 	return {
 		'ok' => 1,
@@ -7452,6 +7455,28 @@ $@
 EOF
 	}
 
+	if (ref($my_json_ref) eq 'ARRAY') {
+		if (ref $my_json_ref->[0] eq 'HASH' && $my_json_ref->[0]->{'id'}) {
+			# is a collection of tweets, decode using JSON library too
+			my $json = JSON->new();
+			my $decoded = $json->decode($orig_data);
+			for (my $i = 0; $i < scalar(@{$my_json_ref}); $i++) {
+				# add JSON library decoded version to each tweet
+				$my_json_ref->[$i]->{'__json_decoded'} = $decoded->[$i];
+			}
+		}
+	}
+	elsif (ref($my_json_ref) eq 'HASH' && $my_json_ref->{'id'}) {
+		my $json = JSON->new();
+		my $decoded = $json->decode($orig_data);
+		$my_json_ref->{'__json_decoded'} = $decoded;
+	}
+	elsif (ref($my_json_ref) eq 'HASH' && $my_json_ref->{'payload'}->{'id'}) {
+		my $json = JSON->new();
+		my $decoded = $json->decode($orig_data);
+		$my_json_ref->{'payload'}->{'__json_decoded'} = $decoded->{'payload'};
+	}
+
 	return $my_json_ref;
 }
 
